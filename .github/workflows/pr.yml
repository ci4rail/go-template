name: Pull Request Workflow

on:
  pull_request:
    branches: ["main"]
    paths-ignore: ["docs/**"]

jobs:
  test:
    strategy:
      matrix:
        go-version: [1.20.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set up Go environment
        run: |
          mkdir -p ~/go/bin
          echo "~/go/bin" >> $GITHUB_PATH

      - uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Download dependencies
        run: make download

      - name: Lint all code with golangci-lint
        run: make lint

      - name: Run all tests
        run: make test

  build-and-push-pr-image:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker image
        id: build-and-upload
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
          IMAGE_TAG: pr-${{ github.head_ref }}
        run: |
          docker buildx build --platform linux/amd64,linux/arm64 --push -t $IMAGE_NAME:$IMAGE_TAG .
          echo "docker_image=$IMAGE_NAME:$IMAGE_TAG" >> "$GITHUB_OUTPUT"

      - name: Output Docker image
        run: |
          echo "Docker image available at: ${{ steps.build-and-upload.outputs.docker_image }}"
